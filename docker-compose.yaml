version: "3.8"
services:
  postgresdb:
    image: postgres:16
    restart: always
    ports:
      - "5434:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - spotify_data:/var/lib/postgresql/data
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -h localhost -U ${POSTGRES_USER} -d ${POSTGRES_DB}",
        ]
      interval: 5s
      retries: 10

  postgres-init:
    image: postgres:16
    command: >
      bash -c "sleep 5 && PGPASSWORD=watermelon psql -h postgresdb -U nayeon -d spotify-star-schema -f /docker-entrypoint-initdb.d/create_db.sql"
    volumes:
      - ./sql/create_db.sql:/docker-entrypoint-initdb.d/create_db.sql
    depends_on:
      - postgresdb

  pg-admin:
    image: dpage/pgadmin4:6
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
      PGADMIN_LISTEN_PORT: 5050
    ports:
      - "5050:5050"
    depends_on:
      - postgresdb

  airflow-scheduler:
    build:
      context: .
      dockerfile: Dockerfile.airflow
    command: scheduler
    environment:
      AIRFLOW_EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgresdb/${AIRFLOW_DB_NAME}
    restart: always
    depends_on:
      - postgresdb
      - airflow-init
      - postgres-init
    volumes:
      - ./airflow:/opt/airflow
      - ./scripts:/opt/scripts
      - ./data:/opt/data
      - ./config:/opt/config

  airflow-webserver:
    build:
      context: .
      dockerfile: Dockerfile.airflow
    command: webserver
    environment:
      AIRFLOW_EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgresdb/${AIRFLOW_DB_NAME}
    ports:
      - "8080:8080"
    restart: always
    depends_on:
      - postgresdb
      - airflow-init
      - postgres-init
    volumes:
      - ./airflow:/opt/airflow
      - ./scripts:/opt/scripts
      - ./data:/opt/data
      - ./config:/opt/config

  airflow-init:
    build:
      context: .
      dockerfile: Dockerfile.airflow
    entrypoint: /bin/bash
    command:
      - -c
      - |
        airflow db migrate
        if ! airflow users check -e ${AIRFLOW_ADMIN_EMAIL}; then
          airflow users create --role Admin --username ${AIRFLOW_ADMIN_USER} --password ${AIRFLOW_ADMIN_PASSWORD} --firstname ${AIRFLOW_ADMIN_FIRSTNAME} --lastname ${AIRFLOW_ADMIN_LASTNAME} --email ${AIRFLOW_ADMIN_EMAIL}
        else
          echo "Admin user already exists. Skipping user creation."
        fi
        # Add any other initialization commands you need
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgresdb/${AIRFLOW_DB_NAME}
      AIRFLOW_ADMIN_USER: ${AIRFLOW_ADMIN_USER}
      AIRFLOW_ADMIN_PASSWORD: ${AIRFLOW_ADMIN_PASSWORD}
      AIRFLOW_ADMIN_EMAIL: ${AIRFLOW_ADMIN_EMAIL}
      AIRFLOW_UID: ${AIRFLOW_UID}
    volumes:
      - ./airflow:/opt/airflow
      - ./scripts:/opt/scripts
      - ./data:/opt/data
      - ./config:/opt/config
    restart: "no"
    depends_on:
      - postgres-init

  selenium:
    container_name: remote_chromedriver
    image: seleniarm/standalone-chromium:latest
    ports:
      - 4444:4444
    restart: always

  metabase:
    image: metabase/metabase:latest
    restart: always
    environment:
      MB_DB_TYPE: postgres
      MB_DB_DBNAME: ${MB_DB_DBNAME}
      MB_DB_PORT: 5432
      MB_DB_USER: ${POSTGRES_USER}
      MB_DB_PASS: ${POSTGRES_PASSWORD}
      MB_DB_HOST: postgresdb
    ports:
      - "3008:3000"
    depends_on:
      - postgresdb
      - postgres-init
    volumes:
      - metabase_data:/metabase-data

volumes:
  spotify_data:
  metabase_data:
